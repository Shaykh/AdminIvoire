// <auto-generated />
using System;
using AdminIvoire.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AdminIvoire.Infrastructure.Migrations
{
    [DbContext(typeof(LocaliteContext))]
    [Migration("20250219202600_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AdminIvoire.Application.Parametrage.ParametrageEntity", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Key");

                    b.ToTable("Parametrage", (string)null);
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Commune", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<Guid>("DepartementId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Population")
                        .HasColumnType("integer");

                    b.Property<decimal>("Superficie")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Communes");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Departement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Population")
                        .HasColumnType("integer");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Superficie")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Population")
                        .HasColumnType("integer");

                    b.Property<decimal>("Superficie")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Population")
                        .HasColumnType("integer");

                    b.Property<decimal>("Superficie")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.SousPrefecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<Guid>("DepartementId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Population")
                        .HasColumnType("integer");

                    b.Property<decimal>("Superficie")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.ToTable("SousPrefectures");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Village", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<Guid?>("CommuneId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Population")
                        .HasColumnType("integer");

                    b.Property<Guid>("SousPrefectureId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Superficie")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CommuneId");

                    b.HasIndex("SousPrefectureId");

                    b.ToTable("Villages");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Commune", b =>
                {
                    b.HasOne("AdminIvoire.Domain.Entite.Departement", "Departement")
                        .WithMany("Communes")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AdminIvoire.Domain.ValueObject.CoordonneesGeographiques", "CoordonneesGeographiques", b1 =>
                        {
                            b1.Property<Guid>("CommuneId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("numeric");

                            b1.HasKey("CommuneId");

                            b1.ToTable("Communes");

                            b1.WithOwner()
                                .HasForeignKey("CommuneId");
                        });

                    b.Navigation("CoordonneesGeographiques");

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Departement", b =>
                {
                    b.HasOne("AdminIvoire.Domain.Entite.Region", "Region")
                        .WithMany("Departements")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AdminIvoire.Domain.ValueObject.CoordonneesGeographiques", "CoordonneesGeographiques", b1 =>
                        {
                            b1.Property<Guid>("DepartementId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("numeric");

                            b1.HasKey("DepartementId");

                            b1.ToTable("Departements");

                            b1.WithOwner()
                                .HasForeignKey("DepartementId");
                        });

                    b.Navigation("CoordonneesGeographiques");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.District", b =>
                {
                    b.OwnsOne("AdminIvoire.Domain.ValueObject.CoordonneesGeographiques", "CoordonneesGeographiques", b1 =>
                        {
                            b1.Property<Guid>("DistrictId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("numeric");

                            b1.HasKey("DistrictId");

                            b1.ToTable("Districts");

                            b1.WithOwner()
                                .HasForeignKey("DistrictId");
                        });

                    b.Navigation("CoordonneesGeographiques");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Region", b =>
                {
                    b.HasOne("AdminIvoire.Domain.Entite.District", "District")
                        .WithMany("Regions")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AdminIvoire.Domain.ValueObject.CoordonneesGeographiques", "CoordonneesGeographiques", b1 =>
                        {
                            b1.Property<Guid>("RegionId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("numeric");

                            b1.HasKey("RegionId");

                            b1.ToTable("Regions");

                            b1.WithOwner()
                                .HasForeignKey("RegionId");
                        });

                    b.Navigation("CoordonneesGeographiques");

                    b.Navigation("District");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.SousPrefecture", b =>
                {
                    b.HasOne("AdminIvoire.Domain.Entite.Departement", "Departement")
                        .WithMany("SousPrefectures")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AdminIvoire.Domain.ValueObject.CoordonneesGeographiques", "CoordonneesGeographiques", b1 =>
                        {
                            b1.Property<Guid>("SousPrefectureId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("numeric");

                            b1.HasKey("SousPrefectureId");

                            b1.ToTable("SousPrefectures");

                            b1.WithOwner()
                                .HasForeignKey("SousPrefectureId");
                        });

                    b.Navigation("CoordonneesGeographiques");

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Village", b =>
                {
                    b.HasOne("AdminIvoire.Domain.Entite.Commune", null)
                        .WithMany("Villages")
                        .HasForeignKey("CommuneId");

                    b.HasOne("AdminIvoire.Domain.Entite.SousPrefecture", "SousPrefecture")
                        .WithMany("Villages")
                        .HasForeignKey("SousPrefectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AdminIvoire.Domain.ValueObject.CoordonneesGeographiques", "CoordonneesGeographiques", b1 =>
                        {
                            b1.Property<Guid>("VillageId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("numeric");

                            b1.HasKey("VillageId");

                            b1.ToTable("Villages");

                            b1.WithOwner()
                                .HasForeignKey("VillageId");
                        });

                    b.Navigation("CoordonneesGeographiques");

                    b.Navigation("SousPrefecture");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Commune", b =>
                {
                    b.Navigation("Villages");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Departement", b =>
                {
                    b.Navigation("Communes");

                    b.Navigation("SousPrefectures");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.District", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.Region", b =>
                {
                    b.Navigation("Departements");
                });

            modelBuilder.Entity("AdminIvoire.Domain.Entite.SousPrefecture", b =>
                {
                    b.Navigation("Villages");
                });
#pragma warning restore 612, 618
        }
    }
}
